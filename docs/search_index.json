[["index.html", "Meta-Workflow Preface", " Meta-Workflow Miao YU 2022-07-09 Preface This is an online handout for mass spectrometry based metabolomics data analysis. It would cover a full reproducible metabolomics workflow for data analysis and important topics related to metabolomics. Here is a list of topics: Sample collection Sample pretreatment Principles of metabolomics data analysis Software selection Batch correction Annotation Omics analysis Exposome This is a book written in Bookdown. You could contribute it by a pull request in Github. A workshop based on this book could be found here. Meanwhile, a docker image xcmsrocker is available for metabolomics reproducible research. R and Rstudio are the software needed in this workflow. "],["introduction.html", "Chapter 1 Introduction 1.1 History 1.2 Reviews and tutorials 1.3 Trends in Metabolomics 1.4 Workflow", " Chapter 1 Introduction Information in living organism communicates along the Central Dogma in different scales from individual, population, community to ecosystem. Metabolomics (i.e., the profiling and quantification of metabolites) is a relatively new field of “omics” studies. Different from other omics studies, metabolomics always focused on small molecular (molecular weight below 1500 Da) with much lower mass than polypeptide with single or doubled charged ions. Here is a demo of the position of metabolomics in “omics” studies[@b.dunn2011]. Figure 1.1: The complex interactions of functional levels in biological systems. Metabolomics studies always employ GC-MS(Theodoridis et al. 2012; Beale et al. 2018), GC*GC-MS(Tian et al. 2016a), LC-MS(Gika et al. 2014), LC-MS/MS(Begou et al. 2017a), IM-MS(Levy et al. 2019), infrared ion spectroscopy(Martens et al. 2017) or NMR[@b.dunn2011] to measure metabolites. For analytical methods, this review could be checked(A. Zhang et al. 2012). The overall technique progress of metabolomics (2012-2018) could be found here(Miggiels et al. 2019). However, this workflow will only cover mass spectrometry based metabolomics or XC-MS based research. 1.1 History 1.1.1 History of Mass Spectrometry Here is a historical commentary for mass spectrometry(Yates Iii 2011). In details, here is a summary: 1913, Sir Joseph John Thomson “Rays of Positive Electricity and Their Application to Chemical Analyses.” Figure 1.2: Sir Joseph John Thomson “Rays of Positive Electricity and Their Application to Chemical Analyses.” Petroleum industry bring mass spectrometry from physics to chemistry The first commercial mass spectrometer is from Consolidated Engineering Corp to analysis simple gas mixtures from petroleum In World War II, U.S. use mass spectrometer to separate and enrich isotopes of uranium in Manhattan Project U.S. also use mass spectrometer for organic compounds during wartime and extend the application of mass spectrometer 1946, TOF, William E. Stephens 1970s, quadrupole mass analyzer 1970s, R. Graham Cooks developed mass-analyzed ion kinetic energy spectrometry, or MIKES to make MRM analysis for multi-stage mass sepctrometry 1980s, MALDI rescue TOF and mass spectrometry move into biological application 1990s, Orbitrap mass spectrometry 2010s, Aperture Coding mass spectrometry 1.1.2 History of Metabolomcis You could check this report(Baker 2011). According to this book section(Kusonmano, Vongsangnak, and Chumnanpuen 2016a): Figure 1.3: Metabolomics timeline during pre- and post-metabolomics era 2000-1500 BC some traditional Chinese doctors who began to evaluate the glucose level in urine of diabetic patients using ants 300 BC ancient Egypt and Greece that traditionally determine the urine taste to diagnose human diseases 1913 Joseph John Thomson and Francis William Aston mass spectrometry 1946 Felix Bloch and Edward Purcell Nuclear magnetic resonance late 1960s chromatographic separation technique 1971 Pauling’s research team “Quantitative Analysis of Urine Vapor and Breath by Gas–Liquid Partition Chromatography” Willmitzer and his research team pioneer group in metabolomics which suggested the promotion of the metabolomics field and its potential applications from agriculture to medicine and other related areas in the biological sciences 2007 Human Metabolome Project consists of databases of approximately 2500 metabolites, 1200 drugs, and 3500 food components post-metabolomics era high-throughput analytical techniques 1.1.3 Defination Metabolomics is actually a comprehensive analysis with identification and quantification of both known and unknown compounds in an unbiased way. Metabolic fingerprinting is working on fast classification of samples based on metabolite data without quantifying or identification of the metabolites. Metabolite profiling always need a pre-defined metabolites list to be quantification(Madsen, Lundstedt, and Trygg 2010a). Meanwhile, targeted and untargeted metabolomics are also used in publications. For targeted metabolomics, the majority of the molecules within a biological pathway or a defined group of related metabolites are determined. Sometimes broad collection of known metabolites could also be referred as targeted analysis. Untargeted analysis detect all of possible metabolites unbiased in the samples of interest. A similar concept called non-targeted analysis/screen is actually describe the similar studies or workflow. 1.2 Reviews and tutorials Some nice reviews and tutorials related to this workflow could be found in those papers or directly online: 1.2.1 Workflow Those papers are recommended(González-Riano et al. 2020; Pezzatti et al. 2020; X. Liu et al. 2019; Barnes et al. 2016a; Cajka and Fiehn 2016; Gika et al. 2014; Theodoridis et al. 2012; X. Lu and Xu 2008; Fiehn 2002) for general metabolomics related topics. For targeted metabolomics, you could check those reviews(Griffiths et al. 2010; W. Lu, Bennett, and Rabinowitz 2008; Weljie et al. 2006; Yuan et al. 2012; Zhou and Yin 2016; Begou et al. 2017b). 1.2.2 Data analysis You could firstly read those papers(Barnes et al. 2016b; Kusonmano, Vongsangnak, and Chumnanpuen 2016b; Madsen, Lundstedt, and Trygg 2010b; Uppal et al. 2016a; Alonso, Marsal, and Julià 2015) to get the concepts and issues for data analysis in metabolomics. Then this paper(Gromski et al. 2015) could be treated as a step-by-step tutorial. For annotation, this paper(Domingo-Almenara, Montenegro-Burke, Benton, et al. 2018a) is a well organized review. For database used in metabolomics, you could check this review(Vinaixa et al. 2016). For metabolomics software, check this series of reviews for each year(Misra and van der Hooft 2016; Misra, Fahrmann, and Grapov 2017; Misra 2018). For open sourced software, those reviews(Chang et al. 2021; Spicer et al. 2017; Dryden et al. 2017) could be a good start. For DIA or DDA metabolomics, check those papers(Fenaille et al. 2017a; Bilbao et al. 2015a). Here is the slides for metabolomics data analysis workshop and I have made presentations twice in UWaterloo and UC Irvine. Introduction Statistical Analysis Batch Correction Annotation Demo 1.2.3 Application For environmental research related metabolomics or exposome, check those papers(Matich et al. 2019; Tang et al. 2020; Warth et al. 2017; Bundy, Davey, and Viant 2009). For toxicology, check this paper(Mark R. Viant et al. 2019). Check this piece(Wishart 2016) for drug discovery and precision medicine. For food chemistry, check this paper(Castro-Puyana et al. 2017), this paper for livestock(Goldansaz et al. 2017) and those papers for nutrition(Allam-Ndoul et al. 2016; Jones, Park, and Ziegler 2012; Müller and Bosy-Westphal 2020). For disease related metabolomics such as oncology(Spratlin, Serkova, and Eckhardt 2009), Cardiovascular(Cheng et al. 2017) . This paper(Kennedy et al. 2018) cover the metabolomics realted clinic research. For plant science, check those paper(Lloyd W. Sumner, Mendes, and Dixon 2003; Jorge, Mata, and António 2016a; Hansen and Lee 2018a). For single cell metabolomics analysis, check here(Fessenden 2016; Zenobi 2013; Ali et al. 2019; Hansen and Lee 2018b). For gut microbiota, check here(Smirnov et al. 2016). 1.2.4 Challenge General challenge for metabolomics studies could be found here (Schymanski and Williams 2017; Uppal et al. 2016b; Schrimpe-Rutledge et al. 2016; Wolfender et al. 2015). For reproducible research, check those papers (Place et al. 2021; Verhoeven, Giera, and Mayboroda 2020; Mangul et al. 2019; Wallach, Boyack, and Ioannidis 2018; Hites and Jobst 2018; Considine et al. 2017; Sarpe and Schriemer 2017). Quantitative Metabolomics related issues could be found here(Kapoore and Vaidyanathan 2016; Jorge, Mata, and António 2016b). For quality control issues, check here(Dudzik et al. 2018; Siskos et al. 2017; Lloyd W. Sumner et al. 2007; Place et al. 2021). 1.3 Trends in Metabolomics library(gtrendsR) res &lt;- gtrends(c(&quot;metabolomics&quot;, &quot;metabolomics&quot;), geo = c(&quot;CA&quot;,&quot;US&quot;)) plot(res) library(rentrez) papers_by_year &lt;- function(years, search_term){ return(sapply(years, function(y) entrez_search(db=&quot;pubmed&quot;,term=search_term, mindate=y, maxdate=y, retmax=0)$count)) } years &lt;- 1987:2020 total_papers &lt;- papers_by_year(years, &quot;&quot;) omics &lt;- c(&quot;genomic&quot;, &quot;epigenomic&quot;, &quot;metagenomic&quot;, &quot;proteomic&quot;, &quot;transcriptomic&quot;,&quot;metabolomics&quot;,&quot;exposome&quot;, &quot;pharmacogenomic&quot;, &quot;connectomic&quot;) trend_data &lt;- sapply(omics, function(t) papers_by_year(years, t)) trend_props &lt;- trend_data/total_papers library(reshape) library(ggplot2) trend_df &lt;- melt(data.frame(years, trend_data), id.vars=&quot;years&quot;) p &lt;- ggplot(trend_df, aes(years, value, colour=variable)) p + geom_line(size=1) + scale_y_log10(&quot;number of papers&quot;) 1.4 Workflow References "],["experimental-designdoe.html", "Chapter 2 Experimental design(DoE) 2.1 Homogeneity study 2.2 Heterogeneity study 2.3 Power analysis 2.4 Optimization 2.5 Pooled QC", " Chapter 2 Experimental design(DoE) Before you perform any metabolomics experiment, a clean and meaningful experimental design is the best start. Depending on different research purposes, experimental design can be classified into homogeneity and heterogeneity study. Technique such as isotope labeled media will not be discussed in this chapter while this paper(Jang, Chen, and Rabinowitz 2018) could be a good start. 2.1 Homogeneity study In homogeneity study, the research purpose is about method validation in most cases. Pooled sample made from multiple samples or technical replicates from same population will be used. Variances within the samples should be attributed to factors other than the samples themselves. For example, we want to know if sample injection order will affect the intensities of the unknown peaks, one pooled sample or technical replicates samples should be used. Another experimental design for homogeneity study will use biological replicates to find the common features from a group of samples. Biological replicates mean samples from same population with same biological process. For example, we wanted to know metabolites profiles of a certain species and we could collected lots of the individual samples from the population. Then only the peaks/compounds appeared in all samples will be used to describe the metabolites profiles of this species. Technical replicates could also be used with biological replicates. 2.2 Heterogeneity study In heterogeneity study, the research purpose is to find the differences among samples. You need at least a baseline to perform the comparison. Such baseline could be generated by random process, control samples or background knowledge. For example, outlier detection can be performed to find abnormal samples in unsupervised manners. Distribution or spatial analysis could be used to find geological relationship of known and unknown compounds. Temporal trend of metabolites profile could be found by time series or cohort studies. Clinical trial or random control trial is also an important class of heterogeneity studies. In this cases, you need at least two groups: treated group and control group. Also you could treat this group information as the one primary variable or primary variables to be explored for certain research purposes. In the following discussion about experimental design, we will use random control trail as model to discuss important issues. 2.3 Power analysis Supposing we have control and treated groups, the numbers of samples in each group should be carefully calculated.For each metabolite, such comparison could be treated as one t-test. You need to perform a Power analysis to get the numbers. For example, we have two groups of samples with 10 samples in each group. Then we set the power at 0.9, which means one minus Type II error probability, the standard deviation at 1 and the significance level (Type 1 error probability) at 0.05. Then we will get the meaningful delta between the two groups should be higher than 1.53367 under this experiment design. Also we could set the delta to get the minimized numbers of the samples in each group. To get those data such as the standard deviation or delta for power analysis, you need to perform preliminary or pilot experiments. power.t.test(n=10,sd=1,sig.level = 0.05,power = 0.9) ## ## Two-sample t test power calculation ## ## n = 10 ## delta = 1.53367 ## sd = 1 ## sig.level = 0.05 ## power = 0.9 ## alternative = two.sided ## ## NOTE: n is number in *each* group power.t.test(delta = 5,sd=1,sig.level = 0.05,power = 0.9) ## ## Two-sample t test power calculation ## ## n = 2.328877 ## delta = 5 ## sd = 1 ## sig.level = 0.05 ## power = 0.9 ## alternative = two.sided ## ## NOTE: n is number in *each* group However, since sometimes we could not perform preliminary experiment, we could directly compute the power based on false discovery rate control. If the power is lower than certain value, say 0.8, we just exclude this peak as significant features. In this review (Oberg and Vitek 2009), author suggest to estimate an average \\(\\alpha\\) according to this equation (Benjamini and Hochberg 1995) and then use normal way to calculate the sample numbers: \\[ \\alpha_{ave} \\leq (1-\\beta_{ave})\\cdot q\\frac{1}{1+(1-q)\\cdot m_0/m_1} \\] Other study (Blaise et al. 2016) show a method based on simulation to estimate the sample size. They used BY correction to limit the influences from correlations. Other investigation could be found here(Saccenti and Timmerman 2016; Blaise 2013). However, the nature of omics study make the power analysis hard to use one number for all metabolites and all the methods are trying to find a balance to represent more peaks with least samples. MetSizeR GUI Tool for Estimating Sample Sizes for metabolomics Experiments(Nyamundanda et al. 2013). MSstats Protein/Peptide significance analysis (Choi et al. 2014a). enviGCMS GC/LC-MS Data Analysis for Environmental Science(M. Yu et al. 2017a). 2.4 Optimization One experiment can contain lots of factors with different levels and only one set of parameters for different factors will show the best sensitivity or reproducibility for certain study. To find this set of parameters, Plackett-Burman Design (PBD), Response Surface Methodology (RSM), Central Composite Design (CCD), and Taguchi methods could be used to optimize the parameters for metabolomics study. The target could be the quality of peaks, the numbers of peaks, the stability of peaks intensity, and/or the statistics of the combination of those targets. You could check those paper for details(Jacyna, Kordalewska, and Markuszewski 2019; Box, Hunter, and Hunter 2005). 2.5 Pooled QC Pooled QC samples are unique and very important for metabolomics study. Every 10 or 20 samples, a pooled sample from all samples and blank sample in one study should be injected as quality control samples. Pooled QC samples contain the changes during the instrumental analysis and blank samples could tell where the variances come from. Meanwhile the cap of sequence should old the column with pooled QC samples. The injection sequence should be randomized. Those papers(Phapale et al. 2020; Dudzik et al. 2018; Dunn et al. 2012; Broadhurst et al. 2018) should be read for details. If there are other co-factors, a linear model or randomizing would be applied to eliminate their influences. You need to record the values of those co-factors for further data analysis. Common co-factors in metabolomics studies are age, gender, location, etc. If you need data correction, some background or calibration samples are required. However, control samples could also be used for data correction in certain DoE. Another important factors are instrumentals. High-resolution mass spectrum is always preferred. As shown in Lukas’s study (Najdekr et al. 2016): the most effective mass resolving powers for profiling analyses of metabolite rich biofluids on the Orbitrap Elite were around 60000–120000 fwhm to retrieve the highest amount of information. The region between 400–800 m/z was influenced the most by resolution. However, elimination of peaks with high RSD% within group were always omitted by most study. Based on pre-experiment, you could get a description of RSD% distribution and set cut-off to use stable peaks for further data analysis. To my knowledge, 30% is suitable considering the batch effects. References "],["pretreatment.html", "Chapter 3 Pretreatment 3.1 Collection 3.2 Quenching 3.3 Extraction 3.4 Derivatization 3.5 Storage", " Chapter 3 Pretreatment Pretreatment will affect the results of metabolomics and cover the sample treatment from crude samples to injection vials for instrumental analysis. The purpose of sample pretreatment is the to retain more interesting compounds while remove unrelated compounds. For metabolomics studies, we might not know ‘interesting’ compounds in advance and the unrelated compounds are highly depended on research purpose. For example, Gel Permeation Chromatograph(GPC), Florisil, Alumina, Silica gel could be used to remove lipid while alcohols and strong acid/base could make protein denaturation to release more compounds. However, if we are interested in small lipid or peptide, such pretreatment methods should be changed. In general, sample collection, quenching, extraction methods, derivatization, and storage should be optimized in pretreatment. 3.1 Collection Those papers investigated different fecal collection methods(Loftfield et al. 2016; Deda et al. 2017). This paper discuss the influence of sample normalization(Wu and Li 2016). 3.2 Quenching Quenching solvent is always used to stop stop enzymatic activity. In this review(W. Lu et al. 2017), authors said: A classical approach, which works well for many analytes, is boiling ethanol. Although the boiling solvent raises concerns about thermal degradation, it reliably denatures enzymes. In contrast, cold organic solvent may not fully denature enzymes or may do so too slowly such that some metabolic reactions continue, interconverting metabolites during the quenching process. This review(J. Kim et al. 2020) summarized the urease-dependent metabolome sample preparation and found: activities of urease and endogenous urinary enzymes and metabolite contaminants from the urease preparations introduce artefacts into metabolite profiles, thus leading to misinterpretation. 3.3 Extraction According to this research(Bennett et al. 2009): The total metabolome concentration is approximately 300 mM, whereas the protein concentration is approximately 7 mM., which implies that most cellular metabolites are in free form. Dmitri et.al(Sitnikov, Monnin, and Vuckovic 2016) thought the most orthogonal methods to methanol-based precipitation were ion-exchange solid-phase extraction and liquid-liquid extraction using methyl-tertbutyl ether. Another study used stable isotope labeled sample and found the use of a water-methanol-acetonitrile mixture for global metabolite extraction instead of aqueous methanol or aqueous acetonitrile alone (Doppler et al. 2016). Metabolic information was highly influenced by the extraction solvent(Ibáñez et al. 2017). Tissue samples need to first be pulverized into fine powders. Feces collected with 95% ethanol or FOBT would be more reproducible and stable. In this review(W. Lu et al. 2017), authors said: In our experience, for both cell and tissue specimens, 40:40:20 acetonitrile:methanol:water with 0.1 M formic acid (and subsequent neutralization with ammonium bicarbonate) is generally an effective solvent system for both quenching and extraction, including for ATP and other high-energy phosphorylated compounds. We typically use approximately 1 mL of solvent mix to extract 25 mg of biological specimen. …Thus, although drying is acceptable for most metabolites, care must be taken with redox-active species. nano LC-MS could be used to analysis small numbers of cells(Luo and Li 2017). For plant like soybeans(Mahmud et al. 2017), ammonium acetate/methanol could be selected as extraction strategies compared with water/methanol and sodium phosphate/methanol. For general plant samples, check this comprehensive investigation(Bijttebier et al. 2016). 3.4 Derivatization Derivatization is always used in GC-based metabolomics study. This paper(Miyagawa and Bamba 2019) compared sequential derivatization methods and found different compounds would show different fluctuations during oximation or silylation process. This paper summarized derivatization methods for LC-MS (S. Zhao and Li 2020). 3.5 Storage Samples should be stored after sample collection or sample pretreatment. -80°C or -20°C is always preferred to store samples. Dry ice should be used during sample pretreatment. However, comprehensive investigation of storage influences found the metabolites profile will change after one day storage at -80°C(M. Yu et al. 2020) . Rapid analysis of samples should be considered to capture more accurate information in the samples. Storage conditions such as temperature and time can affect the metabolite composition of various samples. Laparre et al.(Laparre et al. 2017a) noted that the metabolite profiles of urine samples were significantly changed after 5 days of storage at 4°C , while Wandro and colleagues(Wandro et al. 2017) observed that the metabolomic profiles of cystic fibrosis sputum samples underwent notable changes after only 1 day of storage at 4°C . Likewise, Roszkowska et al. demonstrated that various signaling molecules were lost from the lipidome profile of tissue after storing the samples for one year at 80°C (Roszkowska et al. 2018). To date, most metabolomics studies involving storage of samples prior to the analysis have used a storage temperature of 80°C , as previous investigations have shown that low temperatures or freeze-thaw cycles do not significantly change the metabolite profile of certain samples(Lin et al. 2007) . For gut microbiota, this paper could be checked for storage issue(Zubeldia-Varela et al. 2020). For blood sample storage, you could check this paper(Hernandes, Barbas, and Dudzik 2017). For urine sample storage, check this(Laparre et al. 2017b). This piece reviewed the stability of energy metabolites(Gil et al. 2015). References "],["instrumental-analysis.html", "Chapter 4 Instrumental analysis 4.1 Column and gradient selection 4.2 Mass resolution 4.3 Matrix effects", " Chapter 4 Instrumental analysis To get more information in the samples, full scan is preferred on GC/LC-MS. Each scan would collect a mass spectrum to cover the setting mass range. If you narrow down your mass range and keep the same scan time, each mass would gain the collection time and you would get a higher sensitivity. However, if you expand your scan range, the sensitivity for each mass would decrease. You could also extend the collection time for each scan. However, it would affect the separation process. Full scan is performed synchronously with the separation process. For a better separation on chromotograph, each peak should have at least 10 points to get a nice peak shape. If you want to separate two peaks with a retention time differences of 10s. Assuming the half peak width is 5s, you need to collect 10 mass spectrum within 10s. So the drwell time for each scan is 1s. If you use a high resolution column and the half peak width is 1s, you need to finish a scan within 0.2s. As we discussed above, shorter dwell time would decrease the sensitivity. Thus there is a trade-off between separation and sensitivity. If you use UPLC, the separation could be finished within 20 min while you need to calculate if you mass spectrometry could still show a good sensitivity. Recently a study (J. Cai and Yan 2021) show 6 points will be enough to generate peaks with 20 points with optimized workflow. 4.1 Column and gradient selection For GC, higher temperature could release compounds with higher boiling point. For LC, gradient and functional groups of stationary phase would be more important than temperature. Polarity of samples and column should match. More polar solvent could release polar compounds. Normal-phase column will not retain non-polar compounds while reversed-phase will elute polar column in the very beginning. To cover a wide polarity range or logP value compounds, normal phase column should match with non-polar to polar gradient to get a better separation of polar compounds while reverse phase column should match with polar to non-polar gradient to elute compounds. If you use an inappropriate order of gradient, you compounds would not be separated well. If you have no idea about column and gradient selection, check literature’s condition. Meanwhile, the pretreatment methods should fit the column and gradient selection. You will get limited information by injection of non-polar extracts on a normal phase column and nothing will be retained on column. This study show improved chromatography conditions will improve the annotation results(Anderson et al. 2021). 4.2 Mass resolution For metabolomics, high resolution mass spectrum should be used to make identification of compounds easier. The Mass Resolving Power is very important for annotation and high resolution mass spectrum should be calibrated in real time. The region between 400–800 m/z was influenced the most by resolution(Najdekr et al. 2016). Orbitrap Fusion’s performance was evaluated here(Barbier Saint Hilaire et al. 2018), as well as the comparison with Fourier transform ion cyclotron resonance (FT-ICR)(Ghaste, Mistrik, and Shulaev 2016; Huang et al. 2021). Mass Difference Maps could recalibrate HRMS data (Smirnov et al. 2019). 4.3 Matrix effects Matrix effects could decrease the sensitivity of untargeted analysis. Such matrix effects could be checked by low resolution mass spectrometry(M. Yu et al. 2017b) and found for high resolution mass spectrometry(Calbiani et al. 2006). Ion suppression should also be considered as a critical issue comparing heterogeneous metabolic profiles(Ghosson et al. 2021). dist_loc &lt;- list.files( find.package(&quot;DiagrammeR&quot;), recursive = TRUE, pattern = &quot;mermaid.*js&quot;, full.names = TRUE ) js_cdn_url &lt;- &quot;https://cdnjs.cloudflare.com/ajax/libs/mermaid/9.0.1/mermaid.min.js&quot; download.file(js_cdn_url, dist_loc) References "],["workflow-2.html", "Chapter 5 Workflow 5.1 Platform for metabolomics data analysis 5.2 Project Setup 5.3 Data sharing 5.4 Contest", " Chapter 5 Workflow You could check this book for metabolomics data analysis (S. Li 2020). DiagrammeR::mermaid(&quot; flowchart TB I(peak-picking) --&gt; C C(visulization) --&gt; D(normalization/batch correction) D --&gt; A(annotation/identification) A --&gt; H(statistical analysis) C --&gt; A --&gt; B(omics analysis) D --&gt; H B --&gt; H H --&gt; E(experimental validation) A --&gt; E H --&gt; A B --&gt; E C --&gt; H &quot;) 5.1 Platform for metabolomics data analysis Here is a list for related open source projects 5.1.1 XCMS &amp; XCMS online XCMS online is hosted by Scripps Institute. If your datasets are not large, XCMS online would be the best option for you. Recently they updated the online version to support more functions for systems biology. They use metlin and iso metlin to annotate the MS/MS data. Pathway analysis is also supported. Besides, to accelerate the process, xcms online employed stream (windows only). You could use stream to connect your instrument workstation to their server and process the data along with the data acquisition automate. They also developed apps for xcms online, but I think apps for slack would be even cooler to control the data processing. xcms is different from xcms online while they might share the same code. I used it almost every data to run local metabolomics data analysis. Recently, they will change their version to xcms 3 with major update for object class. Their data format would integrate into the MSnbase package and the parameters would be easy to set up for each step. Normally, I will use msconvert-IPO-xcms-xMSannotator-metaboanalyst as workflow to process the offline data. It could accelerate the process by parallel processing. However, if you are not familiar with R, you would better to choose some software below. For xcms, 1000 files will need around 5 hours to generate the peaks list on a regular workstation. IPO A Tool for automated Optimization of XCMS Parameters (Libiseller et al. 2015) and Warpgroup is used for chromatogram subregion detection, consensus integration bound determination and accurate missing value integration(Nathaniel G. Mahieu, Genenbacher, and Patti 2016a). Another option is AutoTuner, which are much faster than IPO(McLean and Kujawinski 2020). Recently, MetaboAnalystR 3.0 could also optimize the parameters for xcms while you need to perform the following analysis within this software(Pang et al. 2020). For IPO, ten files will need ~12 hours to generate the optimized results on a regular workstation. Another research use machine learning method to compare different optimization methods and they are all better than the default setting of xcms(Lassen et al. 2021). Check those papers for the XCMS based workflow(Forsberg et al. 2018; Huan et al. 2017; Nathaniel G. Mahieu, Genenbacher, and Patti 2016b; Montenegro-Burke et al. 2017; Domingo-Almenara and Siuzdak 2020). For metlin related annotation, check those papers(Guijas et al. 2018; Tautenhahn et al. 2012; Xue, Guijas, et al. 2020; Domingo-Almenara, Montenegro-Burke, Ivanisevic, et al. 2018). MAIT based on xcms and you could find source code here(Fernández-Albert et al. 2014). iMet-Q is an automated tool with friendly user interfaces for quantifying metabolites in full-scan liquid chromatography-mass spectrometry (LC-MS) data (Chang et al. 2016) compMS2Miner is an Automatable Metabolite Identification, Visualization, and Data-Sharing R Package for High-Resolution LC–MS Data Sets. Here is related papers (Edmands et al. 2017; Edmands, Hayes, and Rappaport 2018; Edmands, Barupal, and Scalbert 2015). mzMatch is a modular, open source and platform independent data processing pipeline for metabolomics LC/MS data written in the Java language, which could be coupled with xcms (Scheltema et al. 2011a; Creek et al. 2012). It also could be used for annotation with MetAssign(Daly et al. 2014a). 5.1.2 PRIMe PRIMe is from RIKEN and UC Davis. They update their database frequently(Tsugawa et al. 2016). It supports mzML and major MS vendor formats. They defined own file format ABF and eco-system for omics studies. The software are updated almost everyday. You could use MS-DIAL for untargeted analysis and MRMOROBS for targeted analysis. For annotation, they developed MS-FINDER and statistic tools with excel. This platform could replaced the dear software from company and well prepared for MS/MS data analysis and lipidomics. They are open source, work on Windows and also could run within mathmamtics. However, they don’t cover pathway analysis. Another feature is they always show the most recently spectral records from public repositories. You could always get the updated MSP spectra files for your own data analysis. For PRIMe based workflow, check those papers(Lai et al. 2018a; Matsuo et al. 2017; Treutler et al. 2016a; Tsugawa et al. 2015a; Tsugawa et al. 2016; Kind et al. 2018). 5.1.3 GNPS GNPS is an open-access knowledge base for community-wide organization and sharing of raw, processed or identified tandem mass (MS/MS) spectrometry data. It’s a straight forward annotation methods for MS/MS data. Feature-based molecular networking (FBMN) within GNPS could be coupled with xcms, openMS, MS-DIAL, MZmine2, and other popular software. GNPS also have a dashboard for online mass spectrometery data analysis$$@petras2021a$$. Check those papers for GNPS and related projects(Aron et al. 2020; Nothias et al. 2020; Scheubert et al. 2017; R. R. da Silva et al. 2018; M. Wang et al. 2016). 5.1.4 OpenMS &amp; SIRIUS OpenMS is another good platform for mass spectrum data analysis developed with C++. You could use them as plugin of KNIME. I suggest anyone who want to be a data scientist to get familiar with platform like KNIME because they supplied various API for different programme language, which is easy to use and show every steps for others. Also TOPPView in OpenMS could be the best software to visualize the MS data. You could always use the metabolomics workflow to train starter about details in data processing. pyOpenMS and OpenSWATH are also used in this platform. If you want to turn into industry, this platform fit you best because you might get a clear idea about solution and workflow. Check those paper for OpenMS based workflow(Bertsch et al. 2011; Pfeuffer et al. 2017; Röst et al. 2014, 2016; Rurik et al. 2020; Alka et al. 2020a). OpenMS could be coupled to SIRIUS 4 for annotation. Sirius is a new java-based software framework for discovering a landscape of de-novo identification of metabolites using single and tandem mass spectrometry. SIRIUS 4 project integrates a collection of our tools, including CSI:FingerID, ZODIAC and CANOPUS. Check those papers for SIRIUS based workflow(Dührkop et al. 2019, 2020; Alka et al. 2020b; Ludwig et al. 2020). 5.1.5 MZmine 2 MZmine 2 has three version developed on Java platform and the lastest version is included into MSDK. Similar function could be found from MZmine 2 as shown in XCMS online. However, MZmine 2 do not have pathway analysis. You could use metaboanalyst for that purpose. Actually, you could go into MSDK to find similar function supplied by ProteoSuite and Openchrom. If you are a experienced coder for Java, you should start here. Check those papers for MZmine based workflow(Pluskal et al. 2010; Pluskal et al. 2020). 5.1.6 Emory MaHPIC This platform is composed by several R packages from Emory University including apLCMS to collect the data, xMSanalyzer to handle automated pipeline for large-scale, non-targeted metabolomics data, xMSannotator for annotation of LC-MS data and Mummichog for pathway and network analysis for high-throughput metabolomics. This platform would be preferred by someone from environmental science to study exposome. You could check those papers for Emory workflow(Uppal et al. 2013; Uppal, Walker, and Jones 2017; T. Yu et al. 2009; S. Li et al. 2013; Q. Liu et al. 2020). 5.1.7 Others MAVEN from Princeton University (Melamud, Vastag, and Rabinowitz 2010; Clasquin, Melamud, and Rabinowitz 2012). metabolomics is a CRAN package for analysis of metabolomics data. autoGCMSDataAnal is a Matlab based comprehensive data analysis strategy for GC-MS-based untargeted metabolomics and AntDAS2 provided An automatic data analysis strategy for UPLC-HRMS-based metabolomics(Y.-J. Yu et al. 2019; Y.-Y. Zhang et al. 2020). enviGCMS from environmental non-targeted analysis and rmwf for reproducible metabolomics workflow (M. Yu and Petrick 2020; M. Yu, Olkowicz, and Pawliszyn 2019a). Pseudotargeted metabolomics method (Zheng et al. 2020; Y. Wang et al. 2016). pySM provides a reference implementation of our pipeline for False Discovery Rate-controlled metabolite annotation of high-resolution imaging mass spectrometry data (Palmer et al. 2017). TinyMS is a Python-Based Pipeline for Preprocessing LC–MS Data for Untargeted Metabolomics Workflows (Riquelme et al. 2020) MetaboliteDetector is a QT4 based software package for the analysis of GC/MS based metabolomics data (Hiller et al. 2009). W4M and metaX could analysis data online (Giacomoni et al. 2015; Wen et al. 2017; Jalili et al. 2020). FTMSVisualization is a suite of tools for visualizing complex mixture FT-MS data (Kew et al. 2017) magma could predict and match MS/MS files. metabCombiner Paired Untargeted LC-HRMS Metabolomics Feature Matching and Concatenation of Disparately Acquired Data Sets(Habra et al. 2021) SLAW is a scalable and self-Optimizing processing workflow for Untargeted LC-MS with a docker image (Delabriere et al. 2021). patRoon: open source software platform for environmental mass spectrometry based non-target screening (Helmus et al. 2021). 5.1.8 Workflow Comparison Here are some comparisons for different workflow and you could make selection based on their works(Myers et al. 2017; Weber et al. 2017; Z. Li et al. 2018). 5.2 Project Setup I suggest building your data analysis projects in RStudio (Click File - New project - New dictionary - Empty project). Then assign a name for your project. I also recommend the following tips if you are familiar with it. Use git/github to make version control of your code and sync your project online. Don’t use your name for your project because other peoples might cooperate with you and someone might check your data when you publish your papers. Each project should be a work for one paper or one chapter in your thesis. Use workflow document(txt or doc) in your project to record all of the steps and code you performed for this project. Treat this document as digital version of your experiment notebook Use data folder in your project folder for the raw data and the results you get in data analysis Use figure folder in your project folder for the figure Use munuscript folder in your project folder for the manuscript (you could write paper in rstudio with the help of template in Rmarkdown) Just double click \\[yourprojectname\\].Rproj to start your project 5.3 Data sharing See this paper(Haug, Salek, and Steinbeck 2017): MetaboLights EU based The Metabolomics Workbench US based MetaboBank Japan based MetabolomeXchange search engine MetabolomeExpress a public place to process, interpret and share GC/MS metabolomics datasets(Carroll, Badger, and Harvey Millar 2010). 5.4 Contest CASMI predict small molecular contest(Blaženović et al. 2017) References "],["raw-data-pretreatment.html", "Chapter 6 Raw data pretreatment 6.1 Data visualization 6.2 Peak extraction 6.3 MS/MS 6.4 Retention Time Correction 6.5 Filling missing values 6.6 Spectral deconvolution 6.7 Dynamic Range 6.8 RSD/fold change Filter 6.9 Power Analysis Filter", " Chapter 6 Raw data pretreatment Raw data from the instruments such as LC-MS or GC-MS were hard to be analyzed. To make it clear, the structure of those data could be summarized as: Indexed scan with time-stamp Each scan contains a full scan mass spectra Common formats for open source mass spectrum data are mzxml, mzml or CDF. However, MassComp might shrink the data size(R. Yang, Chen, and Ochoa 2019). ProteoWizard Toolkit provides a set of open-source, cross-platform software libraries and tools (Chambers et al. 2012). Msconvert is one tool in this toolkit. mzML2ISA &amp; nmrML2ISA could generate enriched ISA-Tab metadata files from metabolomics XML data (Larralde et al. 2017). 6.1 Data visualization You could use msxpertsuite for MS data visualization. It is biological mass spectrometry data visualization and mining with full JavaScript ability (Rusconi 2019). FTMSVisualization is a suite of tools for visualizing complex mixture FT-MS data (Kew et al. 2017). 6.2 Peak extraction GC/LC-MS data are usually be shown as a matrix with column standing for retention times and row standing for masses after bin them into small cell. Figure 6.1: Demo of GC/LC-MS data Conversation from the mass-retention time matrix into a vector with selected MS peaks at certain retention time is the basic idea of Peak extraction. You could EIC for each mass to charge ratio and use the change of trace slope to determine whether there is a peak or not. Then we could make integration for this peak and get peak area and retention time. intensity &lt;- c(10,10,10,10,10,14,19,25,30,33,26,21,16,12,11,10,9,10,11,10) time &lt;- c(1:20) plot(intensity~time, type = &#39;o&#39;, main = &#39;EIC&#39;) Figure 6.2: Demo of EIC with peak However, due to the accuracy of instrument, the detected mass to charge ratio would have some shift and EIC would fail if different scan get the intensity from different mass to charge ratio. In the matchedfilter algorithm (Smith et al. 2006), they solve this issue by bin the data in m/z dimension. The adjacent chromatographic slices could be combined to find a clean signal fitting fixed second-derivative Gaussian with full width at half-maximum (fwhm) of 30s to find peaks with about 1.5-4 times the signal peak width. The the integration is performed on the fitted area. Figure 6.3: Demo of matchedfilter The Centwave algorithm (Tautenhahn, Böttcher, and Neumann 2008) based on detection of regions of interest(ROI) and the following Continuous Wavelet Transform (CWT) is preferred for high-resolution mass spectrum. ROI means a region with stable mass for a certain time. When we find the ROIs, the peak shape is evaluated and ROI could be extended if needed. This algorithm use prefilter to accelerate the processing speed. prefilter with 3 and 100 means the ROI should contain 3 scan with intensity above 100. Centwave use a peak width range which should be checked on pool QC. Another important parameter is ppm. It is the maximum allowed deviation between scans when locating regions of interest (ROIs), which is different from vendor number and you need to extend them larger than the company claimed. For profparam, it’s used for fill peaks or align peaks instead of peak picking. snthr is the cutoff of signal to noise ratio. Deep learning frame for LC-MS feature detection on 2D pseudo color image could improve the peak picking process (F. Zhao, Huang, and Zhang 2021). 6.3 MS/MS Various data acquisition workflow could be checked here(Fenaille et al. 2017b). 6.3.1 MRM decoMS2 An Untargeted Metabolomic Workflow to Improve Structural Characterization of Metabolites(Nikolskiy et al. 2013). It requires two different collision energies, low (usually 0V) and high, in each precursor range to solve the mathematical equations. Data-Independent Targeted Metabolomics Method could connect MS1 and MRM (Y. Chen et al. 2017) DecoID python-based database-assisted deconvolution of MS/MS spectra. 6.3.2 DDA The coverage of DDA could be enhanced by a feature classification strategy \\[@hu2019\\] or iterative process$$@anderson2021$$. 6.3.3 DIA DIA methods could be summarized here including MSE, stepwise windows and random windows(Bilbao et al. 2015b) and here is comparison(Zhu, Chen, and Subramanian 2014). msPurity Automated Evaluation of Precursor Ion Purity for Mass Spectrometry-Based Fragmentation in Metabolomics (Lawson et al. 2017) ULSA Deconvolution algorithm and a universal library search algorithm (ULSA) for the analysis of complex spectra generated via data-independent acquisition based on Matlab (Samanipour et al. 2018) MS-DIAL was initially designed for DIA (Tsugawa et al. 2015b; Treutler et al. 2016b) DIA-Umpire show a comprehensive computational framework for data-independent acquisition proteomics (Tsou et al. 2015) MetDIA could perform Targeted Metabolite Extraction of Multiplexed MS/MS Spectra Generated by Data-Independent Acquisition (H. Li et al. 2016) MetaboDIA workflow build customized MS/MS spectral libraries using a user’s own data dependent acquisition (DDA) data and to perform MS/MS-based quantification with DIA data, thus complementing conventional MS1-based quantification (G. Chen et al. 2017) SWATHtoMRM Development of High-Coverage Targeted Metabolomics Method Using SWATH Technology for Biomarker Discovery(Zha et al. 2018) Skyline is a freely-available and open source Windows client application for building Selected Reaction Monitoring (SRM) / Multiple Reaction Monitoring (MRM), Parallel Reaction Monitoring (PRM - Targeted MS/MS), Data Independent Acquisition (DIA/SWATH) and targeted DDA with MS1 quantitative methods and analyzing the resulting mass spectrometer data (Adams et al. 2020). MSstats is an R-based/Bioconductor package for statistical relative quantification of peptides and proteins in mass spectrometry-based proteomic experiments(Choi et al. 2014b). It is applicable to multiple types of sample preparation, including label-free workflows, workflows that use stable isotope labeled reference proteins and peptides, and work-flows that use fractionation. It is applicable to targeted Selected Reactin Monitoring(SRM), Data-Dependent Acquisiton(DDA or shotgun), and Data-Independent Acquisition(DIA or SWATH-MS). This github page is for sharing source and testing. Other related papers could be found here to cover SWATH and other topic in DIA(Bonner and Hopfgartner 2018; R. Wang, Yin, and Zhu 2019) 6.4 Retention Time Correction For single file, we could get peaks. However, we should make the peaks align across samples for as features and retention time corrections should be performed. The basic idea behind retention time correction is that use the high quality grouped peaks to make a new retention time. You might choose obiwarp(for dramatic shifts) or loess regression(fast) method to get the corrected retention time for all of the samples. Remember the original retention times might be changed and you might need cross-correct the data. After the correction, you could group the peaks again for a better cross-sample peaks list. However, if you directly use obiwarp, you don’t have to group peaks before correction. This paper show a matlab based shift correction methods(H.-Y. Fu et al. 2017). Retention time correction is a Parametric time warping process and this paper is a good start (Wehrens, Bloemberg, and Eilers 2015). Meanwhile, you could use MS2 for retention time correction(Lili Li et al. 2017). 6.5 Filling missing values Too many zeros or NA in peaks list are problematic for statistics. Then we usually need to integreate the area exsiting a peak. xcms 3 could use profile matrix to fill the blank. They also have function to impute the NA data by replace missing values with a proportion of the row minimum or random numbers based on the row minimum. It depends on the user to select imputation methods as well as control the minimum fraction of features appeared in single group. Figure 6.4: Peak filling of GC/LC-MS data With many groups of samples, you will get another data matrix with column standing for peaks at certain retention time and row standing for samples after the Raw data pretreatment. Figure 6.5: Demo of many GC/LC-MS data 6.6 Spectral deconvolution Without structure information about certain compound, the peak extraction would suffer influence from other compounds. At the same retention time, co-elute compounds might share similar mass. Hard electron ionization methods such as electron impact ionization (EI), APPI suffer this issue. So it would be hard to distinguish the co-elute peaks’ origin and deconvolution method[] could be used to separate different groups according to the similar chromatogragh behaviors. Another computational tool eRah could be a better solution for the whole process(Domingo-Almenara et al. 2016). Also the ADAD-GC3.0 could also be helpful for such issue(Ni et al. 2016). Other solutions for GC could be found here(Styczynski et al. 2007; Tian et al. 2016b; Du and Zeisel 2013). 6.7 Dynamic Range Another issue is the Dynamic Range. For metabolomics, peaks could be below the detection limit or over the detection limit. Such Dynamic range issues might raise the loss of information. 6.7.1 Non-detects Some of the data were limited by the detect of limitation. Thus we need some methods to impute the data if we don’t want to lose information by deleting the NA or 0. Two major imputation way could be used. The first way is use model-free method such as half the minimum of the values across the data, 0, 1, mean/median across the data( enviGCMS package could do this via getimputation function). The second way is use model-based method such as linear model, random forest, KNN, PCA. Try simputation package for various imputation methods. As mentioned before, you could also use imputeRowMin or imputeRowMinRand within xcms package to perform imputation. Tobit regression is preferred for censored data. Also you might choose maximum likelihood estimation(Estimation of mean and standard deviation by MLE. Creating 10 complete samples. Pool the results from 10 individual analyses). x &lt;- rnorm(1000,1) x[x&lt;0] &lt;- 0 y &lt;- x*10+1 library(AER) tfit &lt;- tobit(y ~ x, left = 0) summary(tfit) ## ## Call: ## tobit(formula = y ~ x, left = 0) ## ## Observations: ## Total Left-censored Uncensored Right-censored ## 1000 0 1000 0 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.0000 0.4399 2.273 0.023 * ## x 10.0000 0.3162 31.623 &lt;2e-16 *** ## Log(scale) 2.1737 0.0000 Inf &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Scale: 8.791 ## ## Gaussian distribution ## Number of Newton-Raphson Iterations: 1 ## Log-likelihood: -3093 on 3 Df ## Wald-statistic: 1000 on 1 Df, p-value: &lt; 2.22e-16 According to Ronald Hites’s simulation(Hites 2019), measurements below the LOD (even missing measurements) with the LOD/2 or with the \\(LOD/\\sqrt2\\) causes little bias and “Any time you have a % non-detected &gt;20%, for whatever reason, it is unlikely that the data set can give useful results.” Another study find random forest could be the best imputation method for missing at random (MAR), and missing completely at random (MCAR) data. Quantile regression imputation of left-censored data is the best imputation methods for left-censored missing not at random data (Wei et al. 2018). 6.7.2 Over Detection Limit CorrectOverloadedPeaks could be used to correct the Peaks Exceeding the Detection Limit issue (Lisec et al. 2016). 6.8 RSD/fold change Filter Some peaks need to be rule out due to high RSD% and small fold changes compared with blank samples. A more general feature filtering for biomarker discovery can be found here(Gadara et al. 2021). 6.9 Power Analysis Filter As shown in \\[Exprimental design(DoE)\\], the power analysis in metabolomics is ad-hoc since you don’t know too much before you perform the experiment. However, we could perform power analysis after the experiment done. That is, we just rule out the peaks with a lower power for current experimental design. References "],["annotation.html", "Chapter 7 Annotation 7.1 Issues in annotation 7.2 Peak misidentification 7.3 Annotation v.s. identification 7.4 Molecular Formula Assignment 7.5 Redundant peaks 7.6 MS1 MS2 connection 7.7 MS/MS annotation 7.8 Knowledge based annotation 7.9 MS Database for annotation 7.10 Compounds Database", " Chapter 7 Annotation When you get the peaks table or features table, annotation of the peaks would help you. Check this review(Domingo-Almenara, Montenegro-Burke, Benton, et al. 2018a) or other reviews(Chaleckis et al. 2019; Lai et al. 2018b; Nash and Dunn 2019; Mark R. Viant et al. 2017; Allard, Genta-Jouve, and Wolfender 2017; Domingo-Almenara, Montenegro-Burke, Benton, et al. 2018b) for a detailed notes on annotation. The first paper proposed five levels regarding currently computational annotation strategies. Level 1: Peak Grouping: MS Psedospectra extraction based on peak shape similarity and peak abundance correlation Level 2: Peak Annotation: Adducts, Neutral losses, isotopes, and other mass relationships based on mass distances Level 3: Biochemical knowledge based on putative identification, potential biochemical reaction and related statistical analysis Level 4: Use and integration of tandem MS data based on data dependent/independent acquisition mode or in silico prediction Level 5: Retention time prediction based on library-available retention index or quantitative structure-retention relationships (QSRR) models. Most of the software are at level 1 or 2. If we only have compounds structure, we could guess ions under different ionization method. If we have mass spectrum, we could match the mass spectral by a similarity analysis to the database. In metabolomics, we only have mass spectrum or mass-to-charge ratios. Single mass-to-charge ratio is not enough for identification. That’s the one bottleneck for annotation. So prediction is always performed on MS/MS data. 7.1 Issues in annotation The major issue in annotation is the redundancy peaks from same metabolite. Unlike genomes, peaks or features from peak selection are not independent with each other. Adducts, in-source fragments and isotopes would lead to wrong annotation. A common solution is that use known adducts, neutral losses, molecular multimers or multiple charged ions to compare mass distances. Another issue is about the MS/MS database. Only 10% of known metabolites in databases have experimental spectral data. Thus in silico prediction is required. Some works try to fill the gap between experimental data, theoretical values(from chemical database like chemspider) and prediction together. Here is a nice review about MS/MS prediction(Hufsky, Scheubert, and Böcker 2014). 7.2 Peak misidentification Isomer Use separation methods such as chromatography, ion mobility MS, MS/MS. Reversed-phase ion-pairing chromatography and HILIC is useful. Chemical derivatization is another option. Interfering compounds 20ppm is the least exact mass accuracy for HRMS. In-source degradation products 7.3 Annotation v.s. identification According to the definition from the Chemical Analysis Working Group of the Metabolomics Standards Intitvative(Lloyd W. Sumner et al. 2007; Mark R. Viant et al. 2017). Four levels of confidence could be assigned to identification: Level 1 ‘identified metabolites’ Level 2 ‘Putatively annotated compounds’ Level 3 ‘Putatively characterised compound classes’ Level 4 ‘Unknown’ In practice, data analysis based annotation could reach level 2. For level 1, we need at extra methods such as MS/MS, retention time, accurate mass, 2D NMR spectra, and so on to confirm the compounds. However, standards are always required for solid proof. Through MS/MS seemed a required step for identification, recent study found ESI might also generate fragments ions for structure identification (Xue, Domingo-Almenara, et al. 2020; Xue et al. 2021). 7.4 Molecular Formula Assignment Cheminformatics will help for MS annotation. The first task is molecular formula assignment. For a given accurate mass, the formula should be constrained by predefined element type and atom number, mass error window and rules of chemical bonding, such as double bond equivalent (DBE) and the nitrogen rule. The nitrogen rule is that an odd nominal molecular mass implies also an odd number of nitrogen. This rule should only be used with nominal (integer) masses. Degree of unsaturation or DBE use rings-plus-double-bonds equivalent (RDBE) values, which should be interger. The elements oxygen and sulphur were not taken into account. Otherwise the molecular formula will not be true. \\[RDBE = C+Si - 1/2(H+F+Cl+Br+I) + 1/2(N+P)+1 \\] To assign molecular formula to a mass to charge ratio, Seven Golden Rules (Kind and Fiehn 2007) for heuristic filtering of molecular formulas should be considered: Apply heuristic restrictions for number of elements during formula generation. This is the table for known compounds: ## Mass.Range.[Da] Library C.max H.max N.max O.max P.max S.max F.max Cl.max ## 1 &lt; 500 DNP 29 72 10 18 4 7 15 8 ## 2 &lt;NA&gt; Wiley 39 72 20 20 9 10 16 10 ## 3 &lt; 1000 DNP 66 126 25 27 6 8 16 11 ## 4 &lt;NA&gt; Wiley 78 126 20 27 9 14 34 12 ## 5 &lt; 2000 DNP 115 236 32 63 6 8 16 11 ## 6 &lt;NA&gt; Wiley 156 180 20 40 9 14 48 12 ## 7 &lt; 3000 DNP 162 208 48 78 6 9 16 11 ## Br.max Si.max ## 1 5 NA ## 2 4 8 ## 3 8 NA ## 4 8 14 ## 5 8 NA ## 6 10 15 ## 7 8 NA Perform LEWIS and SENIOR check. The LEWIS rule demands that molecules consisting of main group elements, especially carbon, nitrogen and oxygen, share electrons in a way that all atoms have completely filled s, p-valence shells (‘octet rule’). Senior’s theorem requires three essential conditions for the existence of molecular graphs The sum of valences or the total number of atoms having odd valences is even; The sum of valences is greater than or equal to twice the maximum valence; The sum of valences is greater than or equal to twice the number of atoms minus 1. Perform isotopic pattern filter. Isotope ratio abundance was included in the algorithm as an additional orthogonal constraint, assuming high quality data acquisitions, specifically sufficient ion statistics and high signal/noise ratio for the detection of the M+1 and M+2 abundances. For monoisotopic elements (F, Na, P, I) this rule has no impact. isotope pattern will be useful for brominated, chlorinated small molecules and sulphur-containing peptides. Perform H/C ratio check (hydrogen/carbon ratio). In most cases the hydrogen/carbon ratio does not exceed H/C &gt; 3 with rare exception such as in methylhydrazine (CH6N2). Conversely, the H/C ratio is usually smaller than 2, and should not be less than 0.125 like in the case of tetracyanopyrrole (C8HN5). Perform NOPS ratio check (N, O, P, S/C ratios). ## Element.ratios Common.range.(covering.99.7%) Extended.range.(covering.99.99%) ## 1 H/C 0.2–3.1 0.1–6 ## 2 F/C 0–1.5 0–6 ## 3 Cl/C 0–0.8 0–2 ## 4 Br/C 0–0.8 0–2 ## 5 N/C 0–1.3 0–4 ## 6 O/C 0–1.2 0–3 ## 7 P/C 0–0.3 0–2 ## 8 S/C 0–0.8 0–3 ## 9 Si/C 0–0.5 0–1 ## Extreme.range.(beyond.99.99%) ## 1 &lt; 0.1 and 6–9 ## 2 &gt; 1.5 ## 3 &gt; 0.8 ## 4 &gt; 0.8 ## 5 &gt; 1.3 ## 6 &gt; 1.2 ## 7 &gt; 0.3 ## 8 &gt; 0.8 ## 9 &gt; 0.5 Perform heuristic HNOPS probability check (H, N, O, P, S/C high probability ratios) df &lt;- data.frame( stringsAsFactors = FALSE, Element.counts = c(&quot;NOPS all &gt; 1&quot;,&quot;NOP all &gt; 3&quot;,&quot;OPS all &gt; 1&quot;, &quot;PSN all &gt; 1&quot;,&quot;NOS all &gt; 6&quot;), Heuristic.Rule = c(&quot;N&lt; 10, O &lt; 20, P &lt; 4, S &lt; 3&quot;, &quot;N &lt; 11, O &lt; 22, P &lt; 6&quot;,&quot;O &lt; 14, P &lt; 3, S &lt; 3&quot;, &quot;P &lt; 3, S &lt; 3, N &lt; 4&quot;,&quot;N &lt; 19 O &lt; 14 S &lt; 8&quot;), DB.examples.for.maximum.values = c(&quot;C15H34N9O8PS, C22H44N4O14P2S2, C24H38N7O19P3S&quot;,&quot;C20H28N10O21P4, C10H18N5O20P5&quot;, &quot;C22H44N4O14P2S2, C16H36N4O4P2S2&quot;, &quot;C22H44N4O14P2S2, C16H36N4O4P2S2&quot;,&quot;C59H64N18O14S7&quot;) ) df ## Element.counts Heuristic.Rule ## 1 NOPS all &gt; 1 N&lt; 10, O &lt; 20, P &lt; 4, S &lt; 3 ## 2 NOP all &gt; 3 N &lt; 11, O &lt; 22, P &lt; 6 ## 3 OPS all &gt; 1 O &lt; 14, P &lt; 3, S &lt; 3 ## 4 PSN all &gt; 1 P &lt; 3, S &lt; 3, N &lt; 4 ## 5 NOS all &gt; 6 N &lt; 19 O &lt; 14 S &lt; 8 ## DB.examples.for.maximum.values ## 1 C15H34N9O8PS, C22H44N4O14P2S2, C24H38N7O19P3S ## 2 C20H28N10O21P4, C10H18N5O20P5 ## 3 C22H44N4O14P2S2, C16H36N4O4P2S2 ## 4 C22H44N4O14P2S2, C16H36N4O4P2S2 ## 5 C59H64N18O14S7 Perform TMS check (for GC-MS if a silylation step is involved). For TMS derivatized molecules detected in GC/MS analyses, the rules on element ratio checks and valence tests are hence best applied after TMS groups are subtracted, in a similar manner as adducts need to be first recognized and subtracted in LC/MS analyses. Seven Golden Rules were built for GC-MS and Hydrogen Rearrangement Rules were major designed for LC-CID-MS/MS(Tsugawa et al. 2016). Based on extensively curated database records and enthalpy calculations, “hydrogen rearrangement (HR) rules” could be extending the even-electron rule for carbon (C) and heteroatoms, oxygen (O), nitrogen (N), phosphorus (P), and sulfur (S). They used high abundance MS/MS peaks that exceeded 10% of their base peaks to identify common features in terms of 4 HR rules for positive mode and 5 HR rules for negative mode. Seven Golden Rules and Hydrogen Rearrangement Rules might also be captured by statistical models. However, such heuristic rules could reduce the searching space of possible formula. molgen generating all structures (connectivity isomers, constitutions) that correspond to a given molecular formula, with optional further restrictions, e.g. presence or absence of particular substructures (Gugisch et al. 2015). mfFinder can predict formula based on accurate mass (Patiny and Borel 2013). RAMSI is the robust automated mass spectra interpretation and chemical formula calculation method using mixed integer linear programming optimization (Baran and Northen 2013). Here is some other Cheminformatics tools, which could be used to assign meaningful formula or structures for mass spectra. RDKit Open-Source Cheminformatics Software cdk The Chemistry Development Kit (CDK) is a scientific, LGPL-ed library for bio- and cheminformatics and computational chemistry written in Java (Guha 2007). Open Babel Open Babel is a chemical toolbox designed to speak the many languages of chemical data (O’Boyle et al. 2011). ClassyFire is a tool for automated chemical classification with a comprehensive, computable taxonomy (Djoumbou Feunang et al. 2016). 7.5 Redundant peaks Full scan mass spectra always contain lots of redundant peaks such as adducts, isotope, fragments, multiple charged ions and other oligomers. Such peaks dominated the features table(Xu, Lu, and Rabinowitz 2015; Sindelar and Patti 2020; Nathaniel G. Mahieu and Patti 2017). Annotation tools could label those peaks either by known list or frequency analysis of the paired mass distances(Ju et al. 2020; Kouřil et al., n.d.). 7.5.1 Adducts list You could find adducts list here from commonMZ project. 7.5.2 Isotope Here is Isotope pattern prediction. 7.5.3 CAMERA Common annotation for xcms workflow(Kuhl et al. 2012). 7.5.4 RAMClustR The software could be found here (C. D. Broeckling et al. 2014; Corey D. Broeckling et al. 2016). The package included a vignette to follow. 7.5.5 BioCAn BioCAn combines the results from database searches and in silico fragmentation analyses and places these results into a relevant biological context for the sample as captured by a metabolic model (Alden et al. 2017). 7.5.6 mzMatch mzMatch is a modular, open source and platform independent data processing pipeline for metabolomics LC/MS data written in the Java language. (Chokkathukalam et al. 2013; Scheltema et al. 2011b) and MetAssign is a probabilistic annotation method using a Bayesian clustering approach, which is part of mzMatch(Daly et al. 2014b). 7.5.7 xMSannotator The software could be found here(Uppal, Walker, and Jones 2017). 7.5.8 mWise mWise is an Algorithm for Context-Based Annotation of Liquid Chromatography–Mass Spectrometry Features through Diffusion in Graphs(Barranco-Altirriba et al. 2021). 7.5.9 MAIT You could find source code here(Fernández-Albert et al. 2014). 7.5.10 pmd Paired Mass Distance(PMD) analysis for GC/LC-MS based nontarget analysis to remove redundant peaks(M. Yu, Olkowicz, and Pawliszyn 2019b). 7.5.11 nontarget nontarget could find Isotope &amp; adduct peak grouping, and perform homologue series detection (Loos and Singer 2017). 7.5.12 Binner Binner Deep annotation of untargeted LC-MS metabolomics data (Kachman et al. 2020) 7.5.13 mz.unity You could find source code here (Nathaniel G. Mahieu et al. 2016) and it’s for detecting and exploring complex relationships in accurate-mass mass spectrometry data. 7.5.14 MS-FLO ms-flo A Tool To Minimize False Positive Peak Reports in Untargeted Liquid Chromatography–Mass Spectroscopy (LC-MS) Data Processing (DeFelice et al. 2017). 7.5.15 CliqueMS CliqueMS is a computational tool for annotating in-source metabolite ions from LC-MS untargeted metabolomics data based on a coelution similarity network (Senan et al. 2019). 7.5.16 InterpretMSSpectrum This package is for annotate and interpret deconvoluted mass spectra (mass*intensity pairs) from high resolution mass spectrometry devices. You could use this package to find molecular ions for GC-MS (Jaeger et al. 2016). 7.5.17 NetID NetID is a global network optimization approach to annotate untargeted LC-MS metabolomics data(L. Chen et al. 2021). 7.5.18 ISfrag De Novo Recognition of In-Source Fragments for Liquid Chromatography–Mass Spectrometry Data(Guo et al. 2021) 7.6 MS1 MS2 connection 7.6.1 PMDDA 7.6.2 HERMES a molecular-formula-oriented method to target the metabolome(Giné et al. 2021). 7.7 MS/MS annotation MS/MS annotation is performed to generate a matching score with library spectra. The most popular matching algorithm is dot product similarity. A recent study found spectral entropy algorithm outperformed dot product similarity (Y. Li et al. 2021). You could check \\[Workflow\\] section for popular platform. Here are some stand-alone annotation software: 7.7.1 MetDNA MetDNA is the Metabolic reaction network-based recursive metabolite annotation for untargeted metabolomics (Shen et al. 2019). 7.7.2 MetFusion Java based integration of compound identiﬁcation strategies. You could access the application here (Gerlich and Neumann 2013). 7.7.3 MS2Analyzer MS2Analyzer could annotate small molecule substructure from accurate tandem mass spectra. (Ma et al. 2014) 7.7.4 MetFrag MetFrag could be used to make in silico prediction/match of MS/MS data(Ruttkies et al. 2016; Wolf et al. 2010). 7.7.5 CFM-ID CFM-ID use Metlin’s data to make prediction \\[@allen2014\\] and 4.0 (Allen et al. 2014). 7.7.6 LipidFrag LipidFrag could be used to make in silico prediction/match of lipid related MS/MS data (Witting et al. 2017). 7.7.7 Lipidmatch in silico: in silico lipid mass spectrum search (Koelmel et al. 2017). 7.7.8 BarCoding Bar coding select mass-to-charge regions containing the most informative metabolite fragments and designate them as bins. Then translate each metabolite fragmentation pattern into a binary code by assigning 1’s to bins containing fragments and 0’s to bins without fragments. Such coding annotation could be used for MRM data (Spalding et al. 2016). 7.7.9 iMet This online application is a network-based computation method for annotation (Aguilar-Mogas et al. 2017). 7.8 Knowledge based annotation 7.8.1 Chromatographic retention-related criteria For targeted analysis, chromatographic retention time could be the qualitative method for certain compounds with a carefully designed pre-treatment. For untargeted analysis, such information could also be used for annotation. GC-MS usually use retention index for certain column while LC-MS might not show enough reproducible results as GC. Such method could be tracked back to quantitative structure-retention relationship (QSRR) models or linear solvation energy relationship (LSER). However, such methods need molecular descriptors as much as possible. For untargeted analysis, retention time and mass to charge ratio could not generate enough molecular descriptors to build QSPR models. In this case, such criteria might be usefully for validation instead of annotation unless we could measure or extract more information such as ion mobility from unknown compounds. Retip Retention Time Prediction for Compound Annotation in Untargeted Metabolomics (Bonini et al. 2020). JAVA based MolFind could make annotation for unknown chemical structure by prediction based on RI, ECOM50, drift time and CID spectra (Menikarachchi et al. 2012). For-ident could give a score for identification with the help of logD(relative retention time) and/or MS/MS. 7.8.2 ProbMetab Provides probability ranking to candidate compounds assigned to masses, with the prior assumption of connected sample and additional previous and spectral information modeled by the user. You could find source code here (R. R. Silva et al. 2014). 7.8.3 MI-Pack You could find python software here (Weber and Viant 2010). 7.8.4 MetExpert MetExpert is an expert system to assist users with limited expertise in informatics to interpret GCMS data for metabolite identification without querying spectral databases (Qiu, Lei, and Sumner 2018). 7.8.5 MycompoundID MycompoundID could be used to search known and unknown metabolites online (Liang Li et al. 2013). 7.8.6 MetFamily Shiny app for MS and MS/MS data annotation (Treutler et al. 2016a). 7.8.7 Plantmat excel library based prediction for plant metabolites(Qiu et al. 2016). 7.9 MS Database for annotation 7.9.1 MS Fiehn Lab NIST: No free Spectral Database for Organic Compounds, SDBS MINE is an open access database of computationally predicted enzyme promiscuity products for untargeted metabolomics Database of free solution mobilities for 276 metabolites for capillary zone electrophoresis / mass spectrometry (Petrov et al. 2020). MINE is an open access database of computationally predicted enzyme promiscuity products for untargeted metabolomics. The annotation would be accurate for general compounds database. 7.9.2 MS/MS MoNA Platform to collect all other open source database MassBank GNPS use inner correlationship in the data and make network analysis at peaks’ level instand of annotated compounds to annotate the data. ReSpect: phytochemicals Metlin is another useful online application for annotation(Guijas et al. 2018). LipidBlast: in silico prediction Lipid Maps MZcloud NIST: Not free GMDB a multistage tandem mass spectral database using a variety of structurally defined glycans. HMDB is a freely available electronic database containing detailed information about small molecule metabolites found in the human body. KEGG is a collection of small molecules, biopolymers, and other chemical substances that are relevant to biological systems. 7.10 Compounds Database PubChem is an open chemistry database at the National Institutes of Health (NIH). Chemspider is a free chemical structure database providing fast text and structure search access to over 67 million structures from hundreds of data sources. ChEBI is a freely available dictionary of molecular entities focused on ‘small’ chemical compounds. RefMet A Reference list of Metabolite names. CAS Largest substance database CompTox compounds, exposure and toxicity database. Here is related data. T3DB is a unique bioinformatics resource that combines detailed toxin data with comprehensive toxin target information. FooDB is the world’s largest and most comprehensive resource on food constituents, chemistry and biology. Phenol explorer is the first comprehensive database on polyphenol content in foods. Drugbank is a unique bioinformatics and cheminformatics resource that combines detailed drug data with comprehensive drug target information. LMDB is a freely available electronic database containing detailed information about small molecule metabolites found in different livestock species. HPV High Production Volume Information System References "],["omics-analysis.html", "Chapter 8 Omics analysis 8.1 From Bottom-up to Top-down 8.2 Pathway analysis 8.3 Network analysis 8.4 Omics integration", " Chapter 8 Omics analysis When you get the filtered ions, the next step is making annotations for them. Such annotations would be helpful for omics studies. Omics analysis try to combine the information from other ‘omics’ to answer one specific question. Since we have got the annotations, Omics analysis could be performed.Upload the data obtained from the xcms to other tools or databases. You will get an updated database list here. Right now, it is hard to connect different omics databases such as gene, protein and metabolites together for a whole scope of certain biological process. However, you might select few metabolites across those databases and find something interesting. 8.1 From Bottom-up to Top-down Bottom-up analysis mean the model for each metabolite. In this case, we could find out which metabolite will be affected by our experiment design. However, take care of multiple comparison issue. \\[ metabolite = f(control/treatment, co-variables) \\] Top-down analysis mean the model for output. In this case, we could evaluate the contribution of each metabolites. You need variable selection to make a better model. \\[ control/treatment = f(metabolite 1,metabolite 2,...,metaboliteN,co-varuables) \\] For omics study, you might need to integrate dataset from different sources. \\[ control/treatment = f(metabolites, proteins, genes, miRNA,co-varuables) \\] 8.2 Pathway analysis Pathway analysis maps annotated data into known pathway and make statistical analysis to find the influenced pathway or the compounds with high influences on certain pathway. 8.2.1 Pathway Database SMPDB (The Small Molecule Pathway Database) is an interactive, visual database containing more than 618 small molecule pathways found in humans. More than 70% of these pathways (&gt;433) are not found in any other pathway database. The pathways include metabolic, drug, and disease pathways. KEGG (Kyoto Encyclopedia of Genes and Genomes) is one of the most complete and widely used databases containing metabolic pathways (495 reference pathways) from a wide variety of organisms (&gt;4,700). These pathways are hyperlinked to metabolite and protein/enzyme information. Currently KEGG has &gt;17,000 compounds (from animals, plants and bacteria), 10,000 drugs (including different salt forms and drug carriers) and nearly 11,000 glycan structures. BioCyc is a collection of 14558 Pathway/Genome Databases (PGDBs), plus software tools for exploring them. Reactome is an open-source, open access, manually curated and peer-reviewed pathway database. Our goal is to provide intuitive bioinformatics tools for the visualization, interpretation and analysis of pathway knowledge to support basic and clinical research, genome analysis, modeling, systems biology and education. WikiPathway is a database of biological pathways maintained by and for the scientific community. 8.2.2 Pathway software Pathway Commons online tools for pathway analysis RaMP could make pathway analysis for batch search metabox could make pathway analysis impala is used for pathway enrichment analysis Metscape based on Debiased Sparse Partial Correlation (DSPC) algorithm (Basu et al. 2017) to make annotation. 8.3 Network analysis Mummichog could make pathway and network analysis without annotation. MSS: sequential feature screening procedure to select important sub-network and identify the optimal matching for metabolimics data (Q. Cai et al. 2017). 8.4 Omics integration Blast finds regions of similarity between biological sequences. The program compares nucleotide or protein sequences to sequence databases and calculates the statistical significance. The Omics Discovery Index (OmicsDI) provides a knowledge discovery framework across heterogeneous omics data (genomics, proteomics, transcriptomics and metabolomics). Omics Data Integration Project References "],["peaks-normalization.html", "Chapter 9 Peaks normalization 9.1 Batch effects classification 9.2 Batch effects visualization 9.3 Source of batch effects 9.4 Avoid batch effects by DoE 9.5 post hoc data normalization 9.6 Method to validate the normalization 9.7 Software", " Chapter 9 Peaks normalization 9.1 Batch effects classification Variances among the samples across all the extracted peaks might be affected by factors other than the experiment design. There are three types of those batch effects: Monotone, Block and Mixed. Monotone would increase/decrease with the injection order or batches. Block would be system shift among different batches. Mixed would be the combination of monotone and block batch effects. Meanwhile, different compounds would suffer different type of batch effects. In this case, the normalization or batch correction should be done peak by peak. 9.2 Batch effects visualization Any correction might introduce bias. We need to make sure there are patterns which different from our experimental design. Pooled QC samples should be clustered on PCA score plot. 9.3 Source of batch effects Different Operators &amp; Dates &amp; Sequences Different Instrumental Condition such as different instrumental parameters, poor quality control, sample contamination during the analysis, Column (Pooled QC) and sample matrix effects (ions suppression or/and enhancement) Unknown Unknowns 9.4 Avoid batch effects by DoE You could avoid batch effects from experimental design. Cap the sequence with Pooled QC and Randomized samples sequence. Some internal standards/Instrumental QC might Help to find the source of batch effects while it’s not practical for every compounds in non-targeted analysis. Batch effects might not change the conclusion when the effect size is relatively small. Here is a simulation: set.seed(30) # real peaks group &lt;- factor(c(rep(1,5),rep(2,5))) con &lt;- c(rnorm(5,5),rnorm(5,8)) re &lt;- t.test(con~group) # real peaks group &lt;- factor(c(rep(1,5),rep(2,5))) con &lt;- c(rnorm(5,5),rnorm(5,8)) batch &lt;- seq(0,5,length.out = 10) ins &lt;- batch+con re &lt;- t.test(ins~group) index &lt;- sample(10) ins &lt;- batch+con[index] re &lt;- t.test(ins~group[index]) Randomization could not guarantee the results. Here is a simulation. # real peaks group &lt;- factor(c(rep(1,5),rep(2,5))) con &lt;- c(rnorm(5,5),rnorm(5,8)) batch &lt;- seq(5,0,length.out = 10) ins &lt;- batch+con re &lt;- t.test(ins~group) 9.5 post hoc data normalization To make the samples comparable, normalization across the samples are always needed when the experiment part is done. Batch effect should have patterns other than experimental design, otherwise just noise. Correction is possible by data analysis/randomized experimental design. There are numerous methods to make normalization with their combination. We could divided those methods into two categories: unsupervised and supervised. Unsupervised methods only consider the normalization peaks intensity distribution across the samples. For example, quantile calibration try to make the intensity distribution among the samples similar. Such methods are preferred to explore the inner structures of the samples. Internal standards or pool QC samples also belong to this category. However, it’s hard to take a few peaks standing for all peaks extracted. Supervised methods will use the group information or batch information in experimental design to normalize the data. A linear model is always used to model the unwanted variances and remove them for further analysis. Since the real batch effects are always unknown, it’s hard to make validation for different normalization methods. Li et.al developed NOREVA to make comparision among 25 correction method (B. Li et al. 2017) and a recently updates make this numbers to 168 (Qingxia Yang et al. 2020). MetaboDrift also contain some methods for batch correction in excel (Thonusin et al. 2017). Another idea is use spiked-in samples to validate the methods (Franceschi et al. 2012) , which might be good for targeted analysis instead of non-targeted analysis. Relative log abundance (RLA) plots(De Livera et al. 2012a) and heatmap often used to show the variances among the samples. 9.5.1 Unsupervised methods 9.5.1.1 Distribution of intensity Intensity collects from LC/GC-MS always showed a right-skewed distribution. Log transformation is often necessary for further statistical analysis. 9.5.1.2 Centering For peak p of sample s in batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = I_{p,s,b} - mean(I_{p,b}) + median(I_{p,qc})\\] If no quality control samples used, the corrected abundance I would be: \\[\\hat I_{p,s,b} = I_{p,s,b} - mean(I_{p,b})\\] 9.5.1.3 Scaling For peak p of sample s in certain batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{std_{p,b}} * std_{p,qc,b} + mean(I_{p,qc,b})\\] If no quality control samples used, the corrected abundance I would be: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{std_{p,b}}\\] 9.5.1.4 Pareto Scaling For peak p of sample s in certain batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{Sqrt(std_{p,b})} * Sqrt(std_{p,qc,b}) + mean(I_{p,qc,b})\\] If no quality control samples used, the corrected abundance I would be: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{Sqrt(std_{p,b})}\\] 9.5.1.5 Range Scaling For peak p of sample s in certain batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{max(I_{p,b}) - min(I_{p,b})} * (max(I_{p,qc,b}) - min(I_{p,qc,b})) + mean(I_{p,qc,b})\\] If no quality control samples used, the corrected abundance I would be: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{max(I_{p,b}) - min(I_{p,b})} \\] 9.5.1.6 Level scaling For peak p of sample s in certain batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{mean(I_{p,b})} * mean(I_{p,qc,b}) + mean(I_{p,qc,b})\\] If no quality control samples used, the corrected abundance I would be: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} - mean(I_{p,b})}{mean(I_{p,b})} \\] 9.5.1.7 Quantile The idea of quantile calibration is that alignment of the intensities in certain samples according to quantile in each sample. Here is the demo: set.seed(42) a &lt;- rnorm(1000) # b sufferred batch effect with a bias of 10 b &lt;- rnorm(1000,10) hist(a,xlim=c(-5,15),breaks = 50) hist(b,col = &#39;black&#39;, breaks = 50, add=T) # quantile normalized cor &lt;- (a[order(a)]+b[order(b)])/2 # reorder cor &lt;- cor[order(order(a))] hist(cor,col = &#39;red&#39;, breaks = 50, add=T) 9.5.1.8 Ratio based calibration This method calibrates samples by the ratio between qc samples in all samples and in certain batch.For peak p of sample s in certain batch b, the corrected abundance I is: \\[\\hat I_{p,s,b} = \\frac{I_{p,s,b} * median(I_{p,qc})}{mean_{p,qc,b}}\\] set.seed(42) # raw data I = c(rnorm(10,mean = 0, sd = 0.3),rnorm(10,mean = 1, sd = 0.5)) # batch B = c(rep(0,10),rep(1,10)) # qc Iqc = c(rnorm(1,mean = 0, sd = 0.3),rnorm(1,mean = 1, sd = 0.5)) # corrected data Icor = I * median(c(rep(Iqc[1],10),rep(Iqc[2],10)))/mean(c(rep(Iqc[1],10),rep(Iqc[2],10))) # plot the result plot(I) plot(Icor) 9.5.1.9 Linear Normalizer This method initially scales each sample so that the sum of all peak abundances equals one. In this study, by multiplying the median sum of all peak abundances across all samples,we got the corrected data. set.seed(42) # raw data peaksa &lt;- c(rnorm(10,mean = 10, sd = 0.3),rnorm(10,mean = 20, sd = 0.5)) peaksb &lt;- c(rnorm(10,mean = 10, sd = 0.3),rnorm(10,mean = 20, sd = 0.5)) df &lt;- rbind(peaksa,peaksb) dfcor &lt;- df/apply(df,2,sum)* sum(apply(df,2,median)) image(df) image(dfcor) 9.5.1.10 Internal standards \\[\\hat I_{p,s} = \\frac{I_{p,s} * median(I_{IS})}{I_{IS,s}}\\] Some methods also use pooled calibration samples and multiple internal standard strategy to correct the data (van der Kloet et al. 2009; Sysi-Aho et al. 2007). Also some methods only use QC samples to handle the data (Kuligowski et al. 2015). 9.5.2 Supervised methods 9.5.2.1 Regression calibration Considering the batch effect of injection order, regress the data by a linear model to get the calibration. 9.5.2.2 Batch Normalizer Use the total abundance scale and then fit with the regression line (S.-Y. Wang, Kuo, and Tseng 2013). 9.5.2.3 Surrogate Variable Analysis(SVA) We have a data matrix(M*N) with M stands for identity peaks from one sample and N stand for individual samples. For one sample, \\(X = (x_{i1},...,x_{in})^T\\) stands for the normalized intensities of peaks. We use \\(Y = (y_i,...,y_m)^T\\) stands for the group information of our data. Then we could build such models: \\[x_{ij} = \\mu_i + f_i(y_i) + e_{ij}\\] \\(\\mu_i\\) stands for the baseline of the peak intensities in a normal state. Then we have: \\[f_i(y_i) = E(x_{ij}|y_j) - \\mu_i\\] stands for the biological variations caused by the our group, for example, whether treated by exposure or not. However, considering the batch effects, the real model could be: \\[x_{ij} = \\mu_i + f_i(y_i) + \\sum_{l = 1}^L \\gamma_{li}p_{lj} + e_{ij}^*\\] \\(\\gamma_{li}\\) stands for the peak-specific coefficient for potential factor \\(l\\). \\(p_{lj}\\) stands for the potential factors across the samples. Actually, the error item \\(e_{ij}\\) in real sample could always be decomposed as \\(e_{ij} = \\sum_{l = 1}^L \\gamma_{li}p_{lj} + e_{ij}^*\\) with \\(e_{ij}^*\\) standing for the real random error in certain sample for certain peak. We could not get the potential factors directly. Since we don’t care the details of the unknown factors, we could estimate orthogonal vectors \\(h_k\\) standing for such potential factors. Thus we have: \\[ x_{ij} = \\mu_i + f_i(y_i) + \\sum_{l = 1}^L \\gamma_{li}p_{lj} + e_{ij}^*\\\\ = \\mu_i + f_i(y_i) + \\sum_{k = 1}^K \\lambda_{ki}h_{kj} + e_{ij} \\] Here is the details of the algorithm: The algorithm is decomposed into two parts: detection of unmodeled factors and construction of surrogate variables 9.5.2.3.1 Detection of unmodeled factors Estimate \\(\\hat\\mu_i\\) and \\(f_i\\) by fitting the model \\(x_{ij} = \\mu_i + f_i(y_i) + e_{ij}\\) and get the residual \\(r_{ij} = x_{ij}-\\hat\\mu_i - \\hat f_i(y_i)\\). Then we have the residual matrix R. Perform the singular value decompositon(SVD) of the residual matrix \\(R = UDV^T\\) Let \\(d_l\\) be the \\(l\\)th eigenvalue of the diagonal matrix D for \\(l = 1,...,n\\). Set \\(df\\) as the freedom of the model \\(\\hat\\mu_i + \\hat f_i(y_i)\\). We could build a statistic \\(T_k\\) as: \\[T_k = \\frac{d_k^2}{\\sum_{l=1}^{n-df}d_l^2}\\] to show the variance explained by the \\(k\\)th eigenvalue. Permute each row of R to remove the structure in the matrix and get \\(R^*\\). Fit the model \\(r_{ij}^* = \\mu_i^* + f_i^*(y_i) + e^*_{ij}\\) and get \\(r_{ij}^0 = r^*_{ij}-\\hat\\mu^*_i - \\hat f^*_i(y_i)\\) as a null matrix \\(R_0\\) Perform the singular value decompositon(SVD) of the residual matrix \\(R_0 = U_0D_0V_0^T\\) Compute the null statistic: \\[ T_k^0 = \\frac{d_{0k}^2}{\\sum_{l=1}^{n-df}d_{0l}^2} \\] Repeat permuting the row B times to get the null statistics \\(T_k^{0b}\\) Get the p-value for eigengene: \\[p_k = \\frac{\\#{T_k^{0b}\\geq T_k;b=1,...,B }}{B}\\] For a significance level \\(\\alpha\\), treat k as a significant signature of residual R if \\(p_k\\leq\\alpha\\) 9.5.2.3.2 Construction of surrogate variables Estimate \\(\\hat\\mu_i\\) and \\(f_i\\) by fitting the model \\(x_{ij} = \\mu_i + f_i(y_i) + e_{ij}\\) and get the residual \\(r_{ij} = x_{ij}-\\hat\\mu_i - \\hat f_i(y_i)\\). Then we have the residual matrix R. Perform the singular value decompositon(SVD) of the residual matrix \\(R = UDV^T\\). Let \\(e_k = (e_{k1},...,e_{kn})^T\\) be the \\(k\\)th column of V Set \\(\\hat K\\) as the significant eigenvalues found by the first step. Regress each \\(e_k\\) on \\(x_i\\), get the p-value for the association. Set \\(\\pi_0\\) as the proportion of the peak intensity \\(x_i\\) not associate with \\(e_k\\) and find the numbers \\(\\hat m =[1-\\hat \\pi_0 \\times m]\\) and the index of the peaks associated with the eigenvalues Form the matrix \\(\\hat m_1 \\times N\\), this matrix\\(X_r\\) stand for the potential variables. As was done for R, get the eigengents of \\(X_r\\) and denote these by \\(e_j^r\\) Let \\(j^* = argmax_{1\\leq j \\leq n}cor(e_k,e_j^r)\\) and set \\(\\hat h_k=e_j^r\\). Set the estimate of the surrogate variable to be the eigenvalue of the reduced matrix most correlated with the corresponding residual eigenvalue. Since the reduced matrix is enriched for peaks associated with this residual eigenvalue, this is a principled choice for the estimated surrogate variable that allows for correlation with the primary variable. Employ the \\(\\mu_i + f_i(y_i) + \\sum_{k = 1}^K \\gamma_{ki}\\hat h_{kj} + e_{ij}\\) as the estimate of the ideal model \\(\\mu_i + f_i(y_i) + \\sum_{k = 1}^K \\gamma_{ki}h_{kj} + e_{ij}\\) This method could found the potential unwanted variables for the data. SVA were introduced by Jeff Leek (Leek and Storey 2008, 2007; Leek et al. 2012) and EigenMS package implement SVA with modifications including analysis of data with missing values that are typical in LC-MS experiments (Karpievitch et al. 2014). 9.5.2.4 RUV (Remove Unwanted Variation) This method’s performance is similar to SVA. Instead find surrogate variable from the whole dataset. RUA use control or pool QC to find the unwanted variances and remove them to find the peaks related to experimental design. However, we could also empirically estimate the control peaks by linear mixed model. RUA-random (Livera et al. 2015; De Livera et al. 2012b) further use linear mixed model to estimate the variances of random error. A hierarchical approach RUV was recently proposed for metabolomics data(T. Kim et al. 2021). This method could be used with suitable control, which is common in metabolomics DoE. 9.5.2.5 RRmix RRmix also use a latent factor models correct the data (Jr et al. 2017). This method could be treated as linear mixed model version SVA. No control samples are required and the unwanted variances could be removed by factor analysis. This method might be the best choice to remove the unwanted variables with common experiment design. 9.6 Method to validate the normalization 9.7 Software BatchCorrMetabolomics is for improved batch correction in untargeted MS-based metabolomics MetNorm show Statistical Methods for Normalizing Metabolomics Data. BatchQC could be used to make batch effect simulation. Noreva could make online batch correction and comparison(J. Fu et al. 2021). References "],["statistical-analysis.html", "Chapter 10 Statistical analysis 10.1 Basic Statistical Analysis 10.2 Differences analysis 10.3 PCA 10.4 Cluster Analysis 10.5 PLSDA 10.6 Network analysis 10.7 Software", " Chapter 10 Statistical analysis The general purposes for metabolomics study are strongly associated with research goal. However, since metabolomics are usually performed in a non-targeted mode, statistical analysis methods are always started with the exploratory analysis. The basic target for an exploratory analysis is: Find the relationship among variables Find the relationship among samples/group of samples. This is basically unsupervised analysis. However, sometimes we have group information which could be used to find biomarkers or correlation between variables and groups or continuous variables. This type of data need supervised methods to process. A general discussion about statistical analysis in metabolic phenotyping can be found here(Blaise et al. 2021). Before we talk the details of algorithms, let’s cover some basic statistical concepts. 10.1 Basic Statistical Analysis Statistic is used to describe certain property or variables among the samples. It could be designed for certain purpose to extract signal and remove noise. Statistical models and inference are both based on statistic instead of the data. \\[Statistic = f(sample_1,sample_2,...,sample_n)\\] Null Hypothesis Significance Testing (NHST) is often used to make statistical inference. P value is the probability of certain statistics happens under H0 (pre-defined distribution). For omics studies, you should realize Multiple Comparison issue when you perform a lot of(more than 20) comparisons or tests at the same time. False Discovery Rate(FDR) control is required for multiple tests to make sure the results are not false positive. You could use Benjamini-Hochberg method to adjust raw p values or directly use Storey Q value to make FDR control. NHST is famous for the failure of p-value interpretation as well as multiple comparison issues. Bayesian Hypothesis Testing could be an options to cover some drawbacks of NHST. Bayesian Hypothesis Testing use Bayes factor to show the differences between null hypothesis and any other hypothesis. \\[Bayes\\ factor = \\frac{p(D|Ha)}{p(D|H0)} = \\frac{posterior\\ odds}{prior\\ odds}\\] Statistical model use statistics to make prediction/explanation. Most of the statistical model need to be tuned for parameters to show a better performance. Statistical model is build on real data and could be diagnosed by other general statistics such as \\(R^2\\), \\(ROC curve\\). When the models are built or compared, model selection could be preformed. \\[Target = g(Statistic) = g(f(sample_1,sample_2,...,sample_n))\\] Bias-Variance Tradeoff is an important concept regarding statistical models. Certain models could be overfitted(small Bias, large variance) or underfitted(large Bias, small variance) when the parameters of models are not well selected. \\[E[(y - \\hat f)^2] = \\sigma^2 + Var[\\hat f] + Bias[\\hat f]\\] Cross validation could be used to find the best model based on training-testing strategy such as Jacknife, bootstraping resampling and n-fold cross validation. Regularization for models could also be used to find the model with best prediction performance. Rigid regression, LASSO or other general regularization could be employed to build a robust models. For supervised models, linear model and tree based model are two basic categories. Linear model could be useful to tell the independent or correlated relationship of variables and the influences on the predicted variables. Tree based model, on the other hand, try to build a hierarchical structure for the variables such as bagging, random forest or boosting. Linear model could be treated as special case of tree based model with single layer. Other models like Support Vector Machine (SVM), Artificial Neural Network (ANN) or Deep Learning are also make various assumptions on the data. However, if you final target is prediction, you could try any of those models or even weighted combine their prediction to make meta-prediction. 10.2 Differences analysis After we get corrected peaks across samples, the next step is to find the differences between two groups. Actually, you could perform ANOVA or Kruskal-Wallis Test for comparison among more than two groups. The basic idea behind statistic analysis is to find the meaningful differences between groups and extract such ions or peak groups. So how to find the differences? In most metabolomics software, such task is completed by a t-test and report p-value and fold changes. If you only compare two groups on one peaks, that’s OK. However, if you compare two groups on thousands of peaks, statistic textbook would tell you to notice the false positive. For one comparison, the confidence level is 0.05, which means 5% chances to get false positive result. For two comparisons, such chances would be \\(1-0.95^2\\). For 10 comparisons, such chances would be \\(1-0.95^{10} = 0.4012631\\). For 100 comparisons, such chances would be \\(1-0.95^{100} = 0.9940795\\). You would almost certainly to make mistakes for your results. In statistics, the false discovery rate(FDR) control is always mentioned in omics studies for multiple tests. I suggested using q-values to control FDR. If q-value is less than 0.05, we should expect a lower than 5% chances we make the wrong selections for all of the comparisons showed lower q-values in the whole dataset. Also we could use local false discovery rate, which showed the FDR for certain peaks. However, such values are hard to be estimated accurately. Karin Ortmayr thought fold change might be better than p-values to find the differences (Ortmayr et al. 2016). 10.2.1 T-test or ANOVA If one peak show significant differences among two groups or multiple groups, T-test or ANOVA could be used to find such peaks. However, when multiple hypothesis testings are performed, the probability of false positive would increase. In this case, false discovery rate(FDR) control is required. Q value or adjusted p value could be used in this situation. At certain confidence interval, we could find peaks with significant differences after FDR control. 10.2.2 LIMMA Linear Models for MicroArray Data(LIMMA) model could also be used for high-dimensional data like metabolomics. They use a moderated t-statistic to make estimation of the effects called Empirical Bayes Statistics for Differential Expression. It is a hierarchical model to shrink the t-statistic for each peak to all the peaks. Such estimation is more robust. In LIMMA, we could add the known batch effect variable as a covariance in the model. LIMMA is different from t-test or ANOVA while we could still use p value and FDR control on LIMMA results. 10.2.3 Bayesian mixture model Another way to make difference analysis is based on Bayesian mixture model without p value. Such model would not use hypothesis testing and directly generate the posterior estimation of parameters. A posterior probability could be used to check whether certain peaks could be related to different condition. If we want to make comparison between classical model like LIMMA and Bayesian mixture model. We need to use simulation to find the cutoff. 10.3 PCA In most cases, PCA is used as an exploratory data analysis(EDA) method. In most of those most cases, PCA is just served as visualization method. I mean, when I need to visualize some high-dimension data, I would use PCA. So, the basic idea behind PCA is compression. When you have 100 samples with concentrations of certain compound, you could plot the concentrations with samples’ ID. However, if you have 100 compounds to be analyzed, it would by hard to show the relationship between the samples. Actually, you need to show a matrix with sample and compounds (100 * 100 with the concentrations filled into the matrix) in an informal way. The PCA would say: OK, guys, I could convert your data into only 100 * 2 matrix with the loss of information minimized. Yeah, that is what the mathematical guys or computer programmer do. You just run the command of PCA. The new two “compounds” might have the cor-relationship between the original 100 compounds and retain the variances between them. After such projection, you would see the compressed relationship between the 100 samples. If some samples’ data are similar, they would be projected together in new two “compounds” plot. That is why PCA could be used for cluster and the new “compounds” could be referred as principal components(PCs). However, you might ask why only two new compounds could finished such task. I have to say, two PCs are just good for visualization. In most cases, we need to collect PCs standing for more than 80% variances in our data if you want to recovery the data with PCs. If each compound have no relationship between each other, the PCs are still those 100 compounds. So you have found a property of the PCs: PCs are orthogonal between each other. Another issue is how to find the relationship between the compounds. We could use PCA to find the relationship between samples. However, we could also extract the influences of the compounds on certain PCs. You might find many compounds showed the same loading on the first PC. That means the concentrations pattern between the compounds are looked similar. So PCA could also be used to explore the relationship between the compounds. OK, next time you might recall PCA when you need it instead of other paper showed them. Besides, there are some other usage of PCA. Loadings are actually correlation coefficients between peaks and their PC scores. Yamamoto et.al. (Yamamoto et al. 2014) used t-test on this correlation coefficient and thought the peaks with statistically significant correlation to the PC score have biological meanings for further study such as annotation. However, such analysis works better when few PCs could explain most of the variances in the dataset. 10.4 Cluster Analysis After we got a lot of samples and analyzed the concentrations of many compounds in them, we may ask about the relationship between the samples. You might have the sampling information such as the date and the position and you could use boxplot or violin plot to explore the relationships among those categorical variables. However, you could also use the data to find some potential relationship. But how? if two samples’ data were almost the same, we might think those samples were from the same potential group. On the other hand, how do we define the “same” in the data? Cluster analysis told us that just define a “distances” to measure the similarity between samples. Mathematically, such distances would be shown in many different manners such as the sum of the absolute values of the differences between samples. For example, we analyzed the amounts of compound A, B and C in two samples and get the results: Compounds(ng) A B C Sample 1 10 13 21 Sample 2 54 23 16 The distance could be: \\[ distance = |10-54|+|13-23|+|21-16| = 59 \\] Also you could use the sum of squares or other way to stand for the similarity. After you defined a “distance”, you could get the distances between all of pairs for your samples. If two samples’ distance was the smallest, put them together as one group. Then calculate the distances again to combine the small group into big group until all of the samples were include in one group. Then draw a dendrogram for those process. The following issue is that how to cluster samples? You might set a cut-off and directly get the group from the dendrogram. However, sometimes you were ordered to cluster the samples into certain numbers of groups such as three. In such situation, you need K means cluster analysis. The basic idea behind the K means is that generate three virtual samples and calculate the distances between those three virtual samples and all of the other samples. There would be three values for each samples. Choose the smallest values and class that sample into this group. Then your samples were classified into three groups. You need to calculate the center of those three groups and get three new virtual samples. Repeat such process until the group members unchanged and you get your samples classified. OK, the basic idea behind the cluster analysis could be summarized as define the distances, set your cut-off and find the group. By this way, you might show potential relationships among samples. 10.5 PLSDA PLS-DA, OPLS-DA and HPSO-OPLS-DA (Qin Yang et al. 2017) could be used. Partial least squares discriminant analysis(PLSDA) was first used in the 1990s. However, Partial least squares(PLS) was proposed in the 1960s by Hermann Wold. Principal components analysis produces the weight matrix reflecting the covariance structure between the variables, while partial least squares produces the weight matrix reflecting the covariance structure between the variables and classes. After rotation by weight matrix, the new variables would contain relationship with classes. The classification performance of PLSDA is identical to linear discriminant analysis(LDA) if class sizes are balanced, or the columns are adjusted according to the mean of the class mean. If the number of variables exceeds the number of samples, LDA can be performed on the principal components. Quadratic discriminant analysis(QDA) could model nonlinearity relationship between variables while PLSDA is better for collinear variables. However, as a classifier, there is little advantage for PLSDA. The advantages of PLSDA is that this modle could show relationship between variables, which is not the goal of regular classifier. Different algorithms (Andersson 2009) for PLSDA would show different score, while PCA always show the same score with fixed algorithm. For PCA, both new variables and classes are orthognal. However, for PLS(Wold), only new classes are orthognal. For PLS(Martens), only new variables are orthognal. This paper show the details of using such methods (Brereton and Lloyd 2018). Sparse PLS discriminant analysis(sPLS-DA) make a L1 penal on the variable selection to remove the influences from unrelated variables, which make sense for high-throughput omics data (Lê Cao, Boitard, and Besse 2011). For o-PLS-DA, s-plot could be used to find features(Wiklund et al. 2008). 10.6 Network analysis 10.6.1 Vertex and edge Each node is a vertex and the connection between nodes is a edge in the network. The connection can be directed or undirected depending on the relationship. 10.6.2 Build the network Adjacency matrices were always used to build the network. It’s a square matrix with n dimensions. Row i and column j is equal to 1 if and only if vertices i and j are connected. In directed network, such values could be 1 for i to j and -1 for j to i. 10.6.3 Network attributes Vertex/edge attributes could be the group information or metadata about the nodes/connections. The edges could be weighted as attribute. Path is the way from one node to another node in the network and you could find the shortest path in the path. The largest distance of a graph is called its diameter. An undirected network is connected if there is a way from any vertex to any other. Connected networks can further classified according to the strength of their connectedness. An undirected network with at least two paths between each pairs of nodes is said to be biconnected. The transitivity of network is a crude summary of the structure. A high value means that nodes are connected well locally with dense subgraphs. Network data sets typically show high transitivity. Maximum flows and minimum cuts could be used to check the largest volumns and smallest path flow between two nodes. For example, two hubs is connected by one node and the largest volumn and smallest path flow between two nodes from each hub could be counted at the select node. Sparse network has similar number of edges and the number of nodes. Dense network has the number of edges as a quadratic function of the nodes. 10.7 Software MetaboAnalystR (Chong, Wishart, and Xia 2019) caret could employ more than 200 statistical models in a general framework to build/select models. You could also show the variable importance for some of the models. caretEnsemble Functions for creating ensembles of caret models pROC Tools for visualizing, smoothing and comparing receiver operating characteristic (ROC curves). (Partial) area under the curve (AUC) can be compared with statistical tests based on U-statistics or bootstrap. Confidence intervals can be computed for (p)AUC or ROC curves. gWQS Fits Weighted Quantile Sum (WQS) regressions for continuous, binomial, multinomial and count outcomes. References "],["exposome.html", "Chapter 11 Exposome 11.1 Internal exposure 11.2 External exposure", " Chapter 11 Exposome Nature or nurture debate has a similar paradigm in environmental study: is the ecological system and human health risk dominated by heredity or environment? Twins and siblings study(Lakhani et al. 2019; Polderman et al. 2015) show that both heritability and environmental factors could explain the phenotypic variance among population. The contribution of environment among different disease functional domain such as hematological and endocrine could achieve almost half of the total variances (Polderman et al. 2015). However, besides those epidemiology proof, little is known about the influences of overall environmental exposure process at molecular level. Conventional exposure study always investigate one or several specific compounds and their environmental fate or toxicology endpoint. Exposome, on the other hand, tries to access multiple exposure factors from biological or environmental samples as much as possible without a predefined compounds list. Those endogenous and exogenous molecules can reveal the exposure process in details. Exposome could not only help to investigate the comprehensive molecules level changes, but also the interactions among molecules in an non-targeted design. By following annotation of captured compounds, exposome can discover exposure markers for certain type of pollution, as well as biomarkers for certain exposure process and discuss related physiological process. The workflow for exposome is quite similar to metabolomics(Hu et al. 2021). According to CDC, The exposome can be defined as the measure of all the exposures of an individual in a lifetime and how those exposures relate to health. Exposomics is the study of the exposome and relies on the application of internal and external exposure assessment methods. Internal exposure relies on fields of study such as genomics, metabolomics, lipidomics, transcriptomics and proteomics. External exposure assessment relies on measuring environmental stresses. 11.1 Internal exposure Virtual Metabolic Human Database integrating human and gut microbiome metabolism with nutrition and disease. 11.2 External exposure 11.2.1 Environmental fate of compounds 11.2.1.1 QSPR Chemicalize is a powerful online platform for chemical calculations, search, and text processing. QSPR molecular descriptor generate tools list Spark uses computational algorithms based on fundamental chemical structure theory to estimate a wide variety of reactivity parameters strictly from molecular structure. OPERA OPERA models for predicting physicochemical properties and environmental fate endpoints(Mansouri et al. 2018). LogP is important for analytical chemistry. Mannhold (Mannhold et al. 2009) report a comprehensive comparison of logP algorithms. Later, Rajarshi Guha make a comparison with logP algorithms with CDK based on logPstar dataset. Commercial software such as Spark, ACS Labs and ChemAxon might always claim a better performance on in-house dataset compared with public software like KowWIN within EPI Suite. However, we should be careful to evaluate the influence of logP accuracy on the metabolites or unknown compounds. 11.2.1.2 Fate Wania Group developed software tools to address various aspects of organic contaminant fate and behaviour. Trent University release models to predict environmental fate for pollutions such as Level 3. EAWAG-BBD could provide information on microbial enzyme-catalyzed reactions that are important for biotechnology. 11.2.2 Exposure study database The information system PANGAEA is operated as an Open Access library aimed at archiving, publishing and distributing georeferenced data from earth system research. Environmental Health Criteria (EHC) Monographs CTD is a robust, publicly available database that aims to advance understanding about how environmental exposures affect human health. ODMOA facilitates and coordinates the collection, access to, and use of public health data in order to monitor and improve population health. This data is better for general public health research for Massachusetts. The Surveillance, Epidemiology, and End Results (SEER) Program provides information on cancer statistics in an effort to reduce the cancer burden among the U.S. population. References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
